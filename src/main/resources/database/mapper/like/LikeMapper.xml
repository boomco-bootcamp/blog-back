<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lecture.blog.biz.service.like.repo.LikeRepository">

    <!--    게시글 좋아요 추가   -->
    <insert id="insertPostLike" parameterType="LikeSaveReqVO">
        INSERT INTO blog_post_like_l
        (
          blog_post_id
        , user_id
        , rgsn_user_id
        , rgsn_ts
        )
        VALUES
            (
              #{blogPostId}
            , #{rgsnUserId}
            , #{rgsnUserId}
            , CURRENT_TIMESTAMP
            )
    </insert>

    <!-- 게시글 좋아요 삭제 -->
    <delete id="deletePostLike" parameterType="LikeSaveReqVO">
        DELETE
        FROM blog_post_like_l
        WHERE blog_post_id = #{blogPostId}
          AND user_id = #{rgsnUserId}
    </delete>

    <!-- 게시글 좋아요 여부 확인 -->
    <select id="isPostLike" resultType="boolean" parameterType="LikeSaveReqVO">
        SELECT CASE
                   WHEN COUNT(*) > 0 THEN TRUE
                   ELSE FALSE
                   END
        FROM blog_post_like_l
        WHERE blog_post_id = #{blogPostId}
          AND user_id = #{rgsnUserId}
    </select>

    <!--    관심 게시글 목록 조회    -->
    <select id="selectMyPostLikeList" parameterType="LikeReqVO" resultType="PostResVO" >
        SELECT
            bp.blog_post_id,
            bp.blog_id,
            bp.blog_post_cat_id,
            bp.blog_post_title,
            bp.blog_post_con,
            bp.del_yn,
            bp.rgsn_user_id,
            RGSN.user_nm AS rgsn_user_nm,
            bp.rgsn_ts,
            bp.amnn_user_id,
            AMNN.user_nm AS amnn_user_nm,
            bp.amnn_ts,
            coalesce(bpv.blog_post_views_cnt, 0) AS post_views_cnt,
            coalesce(bpc.blog_post_comment_cnt, 0) AS post_comment_cnt,
            coalesce(bpl.blog_post_like_cnt, 0) AS post_like_cnt,
            bpci.blog_post_cat_nm,
            bi.user_id,
            bi.blog_nm,
            U.user_nm AS blog_user_nm
            , CASE WHEN lk.user_id IS NULL THEN 'N' ELSE 'Y' END AS like_yn

        FROM blog_post_l bp

        /* 게시글 카테고리 정보 */
        LEFT JOIN blog_post_cat_info_m bpci ON bpci.blog_post_cat_id = bp.blog_post_cat_id AND bpci.del_yn = 'N'

        /* 게시글 방문자 수 */
        LEFT JOIN (
            SELECT blog_post_id, COUNT(0) AS blog_post_views_cnt FROM blog_post_views_l GROUP BY blog_post_id
        ) bpv ON bpv.blog_post_id = bp.blog_post_id

        /* 게시글 댓글 수*/
        LEFT JOIN (
            SELECT blog_post_id, COUNT(0) AS blog_post_comment_cnt FROM blog_post_comment_l GROUP BY blog_post_id
        ) bpc ON bpc.blog_post_id = bp.blog_post_id

        /* 게시글 좋아요 수*/
        LEFT JOIN (
            SELECT blog_post_id, COUNT(0) AS blog_post_like_cnt FROM blog_post_like_l GROUP BY blog_post_id
        ) bpl ON bpl.blog_post_id = bp.blog_post_id

        /* 등록/수정 사용자 정보 */
        LEFT JOIN blog_user_info_m RGSN ON RGSN.user_id = bp.rgsn_user_id
        LEFT JOIN blog_user_info_m AMNN ON AMNN.user_id = bp.amnn_user_id

        /* 블로그 정보 */
        LEFT JOIN blog_info_m bi ON bi.blog_id = bp.blog_id

        /* 블로그 게시글 작성자 정보 */
        LEFT JOIN blog_user_info_m U ON U.user_id = bi.user_id

        /* 좋아요 여부 */
        INNER JOIN blog_post_like_l lk ON lk.blog_post_id = bp.blog_post_id AND lk.user_id = #{userId}

        WHERE 1 = 1
            AND bp.del_yn ='N'

        ORDER BY lk.rgsn_ts DESC

    </select>

    <!--    관심 게시글 토탈 카운트 조회    -->
    <select id="selectMyPostLikeTotal" parameterType="LikeReqVO" resultType="int">
        SELECT COUNT(0)
        FROM blog_post_l bp
        INNER JOIN blog_post_like_l lk ON lk.blog_post_id = bp.blog_post_id AND lk.user_id = #{userId}
        WHERE 1 = 1 AND bp.del_yn ='N'
    </select>

</mapper>